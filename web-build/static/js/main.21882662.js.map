{"version":3,"file":"static/js/main.21882662.js","mappings":"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","sources":["state/dataSlice.js","components/ButtonsBar.js","state/dataService.js","state/dataThunk.js","components/NextStepButton.js","components/RenderPlants.js","components/RenderOrders.js","screens/Order.js","components/RenderOrderByGroup.js","components/RenderPlantsGroup.js","screens/AllPlants.js","screens/Fild.js","screens/FildsScreen.js","screens/Login.js","hooks/useDeviceToken.js","components/ButtonOut.js","components/HeaderTitle.js","components/RenderNotifi.js","components/Notification.js","hooks/useCallData.js","navigation/AppNavigator.js","state/store.js","App.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    digStorages: [],\r\n    stepOrders: [],\r\n    steps: [],\r\n    token: [],\r\n    currentStep: [],\r\n    groupOrders: [],\r\n    currentStorageId: '',\r\n    currentColorStep: '',\r\n    dataChange: [],\r\n    notifications: [],\r\n    totalPlantQty: 0,\r\n    totalOrderQty: 0,\r\n}\r\n\r\nexport const dataSlice = createSlice({\r\n    name: 'data_from_endpoint',\r\n    initialState,\r\n    reducers: {\r\n\r\n        setDigStorages(state, action) {\r\n            state.digStorages = action.payload.data\r\n        },\r\n        setSteps(state, action) {\r\n            state.steps = action.payload.data\r\n        },\r\n        setToken(state, action) {\r\n            state.token = action.payload\r\n        },\r\n        setStepOrders(state, action) {\r\n            state.stepOrders = action.payload.data\r\n        },\r\n        setGroupOrders(state, action) {\r\n            state.groupOrders = action.payload.data\r\n        },\r\n        setCurrentStep(state, action) {\r\n            state.currentStep = action.payload\r\n        },\r\n        setStorageId(state, action) {\r\n            state.currentStorageId = action.payload\r\n        },\r\n        setNotifications(state, action) {\r\n            state.notifications = action.payload.data\r\n        },\r\n        setTotalQty(state, action) {\r\n            state.totalOrderQty = action.payload.orders\r\n            state.totalPlantQty = action.payload.plants\r\n        },\r\n        setCurrentColorStep(state, action) {\r\n            const colorStepBtn = {\r\n                green: {\r\n                    name: 'green',\r\n                    color: '#00721B'\r\n                },\r\n                yellow: {\r\n                    name: 'yellow',\r\n                    color: '#1FBB43'\r\n                },\r\n                pink: {\r\n                    name: 'pink',\r\n                    color: '#83E499'\r\n                },\r\n                red: {\r\n                    name: 'red',\r\n                    color: '#C2DBC7'\r\n                },\r\n                purple: {\r\n                    name: 'purple',\r\n                    color: '#A8AFAA'\r\n                }\r\n            }\r\n            switch (action.payload) {\r\n                case colorStepBtn.green.name:\r\n                    state.currentColorStep = colorStepBtn.green.color\r\n                    break;\r\n                case colorStepBtn.yellow.name:\r\n                    state.currentColorStep = colorStepBtn.yellow.color\r\n                    break;\r\n                case colorStepBtn.pink.name:\r\n                    state.currentColorStep = colorStepBtn.pink.color\r\n                    break;\r\n                case colorStepBtn.red.name:\r\n                    state.currentColorStep = colorStepBtn.red.color\r\n                    break;\r\n                case colorStepBtn.purple.name:\r\n                    state.currentColorStep = colorStepBtn.purple.color\r\n                    break;\r\n                default:\r\n                    alert('Color not defined!')\r\n            }\r\n        },\r\n        setDataChange(state, action) {\r\n            const orders = state.dataChange\r\n            const eix = orders.findIndex((value) => {\r\n                return (value.orderId === action.payload.orderId &&\r\n                    value.productid === action.payload.productid &&\r\n                    value.characteristicid === action.payload.characteristicid)\r\n            })\r\n\r\n            if (eix > -1) {\r\n                orders[eix] = action.payload\r\n                state.dataChange = orders\r\n            } else {\r\n                state.dataChange = [...orders, action.payload]\r\n            }\r\n        },\r\n\r\n        clearDataChangeItem(state, action) {\r\n            const orders = state.dataChange\r\n            const eix = orders.findIndex((value) => {\r\n                return value.orderId === action.payload.orderId &&\r\n                    value.productid === action.payload.productid &&\r\n                    value.characteristicid === action.payload.characteristicid\r\n            })\r\n            if (eix > -1) {\r\n                const removed = orders.splice(eix, 1)\r\n                state.dataChange = orders\r\n            }\r\n        },\r\n\r\n        clearDataChange(state) {\r\n            state.dataChange = []\r\n        },\r\n        cleanState(state) {\r\n            state.token = []\r\n            state.steps = []\r\n            state.digStorages = []\r\n            state.stepOrders = []\r\n            state.currentStep = []\r\n            state.groupOrders = []\r\n            state.currentStorageId = ''\r\n            state.dataChange = []\r\n            state.notifications = []\r\n            state.totalPlantQty = 0\r\n            state.totalOrderQty = 0\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setDigStorages, setStepOrders, setSteps, setToken,\r\n    cleanState, setCurrentStep, setGroupOrders,\r\n    setStorageId, setDataChange, clearDataChange,\r\n    clearDataChangeItem, setNotifications, setTotalQty,\r\n    setCurrentColorStep\r\n} = dataSlice.actions\r\n\r\nexport default dataSlice.reducer","import { View, Text, StyleSheet, TouchableHighlight } from 'react-native'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { clearDataChange, setCurrentColorStep, setCurrentStep } from '../state/dataSlice'\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    statusBar: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n    },\r\n    buttonsBar: color => ({\r\n        borderRadius: 3,\r\n        backgroundColor: color,\r\n        minWidth: \"18%\",\r\n        height: 45,\r\n        margin: 4,\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n        justifyContent: 'center',\r\n        elevation: 3,\r\n        shadowColor: 'black',\r\n        shadowOffset: { width: -2, height: 4 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 3,\r\n        flex: 3,\r\n    }),\r\n    selectedButtons: { \r\n        borderColor: '#f2f5f8',\r\n        borderWidth: 3,\r\n        borderRadius: 6,\r\n        elevation: 0,\r\n        shadowOffset: { width: 0, height: 0 },\r\n        shadowOpacity: 0,\r\n        shadowRadius: 10,        \r\n        shadowColor: 'black',\r\n        \r\n    },\r\n    textBtnBar: {\r\n        color: 'white',\r\n        fontSize: 12,\r\n        fontWeight: 700,\r\n        alignSelf: 'center',\r\n    },\r\n})\r\n\r\nconst colorStepBtn = {\r\n    green: {\r\n        id: 'b5ffdb30-cdb0-11ed-836c-00c12700489e',\r\n        name: 'Нове',\r\n        color: '#00721B'\r\n    },\r\n    yellow: {\r\n        id: 'b5ffdb2c-cdb0-11ed-836c-00c12700489e',\r\n        name: 'В роботі',\r\n        color: '#1FBB43'\r\n    },\r\n    pink: {\r\n        id: 'b5ffdb2e-cdb0-11ed-836c-00c12700489e',\r\n        name: 'Викопано',\r\n        color: '#83E499'\r\n    },\r\n    red: {\r\n        id: 'b5ffdb2d-cdb0-11ed-836c-00c12700489e',\r\n        name: 'В дорозі',\r\n        color: '#C2DBC7'\r\n    },\r\n    purple: {\r\n        id: 'b5ffdb2f-cdb0-11ed-836c-00c12700489e',\r\n        name: 'На Базі',\r\n        color: '#A8AFAA'\r\n    }\r\n}\r\n\r\nfunction ButtonsBar({ steps, currentStep }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const setDataState = async (newStep) => {\r\n        await dispatch(clearDataChange())\r\n        await dispatch(setCurrentStep(newStep))\r\n        await dispatch(setCurrentColorStep(newStep.theme))\r\n    }\r\n\r\n    const setColor = (val) => {\r\n        switch (val) {\r\n            case colorStepBtn.green.id:\r\n                return colorStepBtn.green.color\r\n                break;\r\n            case colorStepBtn.yellow.id:\r\n                return colorStepBtn.yellow.color\r\n                break;\r\n            case colorStepBtn.pink.id:\r\n                return colorStepBtn.pink.color\r\n                break;\r\n            case colorStepBtn.red.id:\r\n                return colorStepBtn.red.color\r\n                break;\r\n            case colorStepBtn.purple.id:\r\n                return colorStepBtn.purple.color\r\n                break;\r\n            default:\r\n                console.log('color not defined')\r\n        }\r\n    }\r\n\r\n    const setStepName = (val) => {\r\n        switch (val) {\r\n            case colorStepBtn.green.id:\r\n                return colorStepBtn.green.name\r\n            case colorStepBtn.yellow.id:\r\n                return colorStepBtn.yellow.name\r\n            case colorStepBtn.pink.id:\r\n                return colorStepBtn.pink.name\r\n            case colorStepBtn.red.id:\r\n                return colorStepBtn.red.name\r\n            case colorStepBtn.purple.id:\r\n                return colorStepBtn.purple.name\r\n            default:\r\n                alert('Step Name not defined')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <View style={styles.statusBar}>\r\n            {steps.map((step) => (\r\n                <TouchableHighlight\r\n                    key={step.id}\r\n                    style={[styles.buttonsBar(setColor(step.id)), currentStep.id === step.id && styles.selectedButtons]}\r\n                    onPress={() => setDataState(step)}\r\n                >\r\n                    <Text\r\n                        style={[styles.textBtnBar]}\r\n                        allowFontScaling={true}\r\n                        maxFontSizeMultiplier={1}\r\n                    > {setStepName(step.id)} </Text>\r\n                </TouchableHighlight>\r\n            ))}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    steps: state.steps,\r\n    currentStep: state.currentStep\r\n})\r\n\r\nexport default connect(mapStateToProps)(ButtonsBar)\r\n\r\n","import axios from \"axios\";\r\nimport { Buffer } from 'buffer'\r\n\r\nconst username = 'alex';\r\nconst password = '';\r\nconst tok = `${username}:${password}`\r\nconst encodedToken = Buffer.from(tok).toString('base64')\r\n\r\n\r\nconst NOTIFICATIONS_URL = 'https://landshaft.info/modules/viber/digger4.php'\r\nconst SEVE_TOKEN_URL = 'https://us-central1-digger-3000.cloudfunctions.net/saveToken'\r\n\r\nexport class DataService {\r\n\r\n    static getStepOrders(stepId, storageId, token) {\r\n        let stepOrders = axios.post('http://194.42.196.141:41001/UTP/hs/api/getStepOrders', {\r\n            token: token,\r\n            stepId: stepId,\r\n            storageId: storageId,\r\n        }, {\r\n            headers: { 'Authorization': 'Basic ' + encodedToken }\r\n        })\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                alert(error)\r\n                console.log(error);\r\n            })\r\n        return stepOrders\r\n    }\r\n\r\n    static getGroupOrders(stepId, storageId, token) {\r\n        let groupOrders = axios.post('http://194.42.196.141:41001/UTP/hs/api/getStepOrders', {\r\n            token: token,\r\n            stepId: stepId,\r\n            storageId: storageId,\r\n            groupByOrder: false\r\n        }, {\r\n            headers: { 'Authorization': 'Basic ' + encodedToken }\r\n        })\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                alert(error)\r\n                console.log(error);\r\n            })\r\n        return groupOrders\r\n    }\r\n\r\n    static getStoragesDig(token) {\r\n\r\n        return axios.post('http://194.42.196.141:41001/UTP/hs/api/getStorages', { token: token }, {\r\n            headers: { 'Authorization': 'Basic ' + encodedToken }\r\n        })\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                alert(error)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    static getSteps(token) {\r\n\r\n        return axios.post('http://194.42.196.141:41001/UTP/hs/api/getSteps', { token: token }, {\r\n            headers: { 'Authorization': 'Basic ' + encodedToken }\r\n        })\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                alert(error)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    static getToken(log, pass) {\r\n\r\n        return axios.post('http://194.42.196.141:41001/UTP/hs/api/getToken', { login: log, password: pass }, {\r\n            headers: { 'Authorization': 'Basic ' + encodedToken }\r\n        })\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                alert(error.response.data)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    static getOrderInfo(token, orderId) {\r\n\r\n        return axios.post('http://194.42.196.141:41001/UTP/hs/api/getOrderInfo', { token: token, orderid: orderId }, {\r\n            headers: { 'Authorization': 'Basic ' + encodedToken }\r\n        })\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                alert(error.response.data)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    static setNextStepGroup(token, dataOrders) {\r\n\r\n        let stepOrders = axios.post('http://194.42.196.141:41001/UTP/hs/api/setNextOrderStep', {\r\n            token: token,\r\n            stepdata: dataOrders\r\n        }, {\r\n            headers: { 'Authorization': 'Basic ' + encodedToken }\r\n        })\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                alert(error)\r\n                console.log(error);\r\n            })\r\n\r\n        return stepOrders\r\n    }\r\n\r\n    static getNotifi(token) {\r\n\r\n        return axios.post(NOTIFICATIONS_URL, { method: 'getNotifications', token: token },\r\n            {\r\n                headers: { 'Accept': '*/*' }\r\n            })\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                alert(error)\r\n                console.log(error);\r\n            })\r\n    }\r\n    static updateNotifi(token, messageid, mstatus) {\r\n\r\n        return axios.post(NOTIFICATIONS_URL, {\r\n            method: 'updateNotificationStatus',\r\n            token: token,\r\n            messageid: messageid,\r\n            status: mstatus,\r\n        })\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                alert(error.response.data)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    static deleteNotifi(token, messageid) {\r\n\r\n        return axios.post(NOTIFICATIONS_URL, {\r\n            method: 'deleteNotification',\r\n            token: token,\r\n            messageid: messageid,\r\n        })\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                alert(error.response.data)\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    static sendTokenDevice = (userTok, deviceTok, log) => {\r\n        axios.post(SEVE_TOKEN_URL, {\r\n             userToken: userTok,\r\n             deviceToken: deviceTok,\r\n             loged: log\r\n         })\r\n         .then((response) => console.log(response.data))\r\n         .catch(error => {\r\n             if (error.response) {\r\n               console.error('Статус відповіді:', error.response.status);\r\n               console.error('Дані відповіді:', error.response.data);\r\n               console.error('Заголовки відповіді:', error.response.headers);\r\n             } else if (error.request) {\r\n               console.error('Запит відправлений, але не отримано відповіді:', error.request);\r\n             } else {\r\n               console.error('Сталася помилка при виконанні запиту:', error.message);\r\n             }\r\n           });              \r\n       }\r\n\r\n}\r\n\r\n","import { DataService } from \"./dataService\"\r\nimport * as SecureStore from 'expo-secure-store'\r\nimport {\r\n  setDigStorages, setStepOrders,\r\n  setSteps, setToken, setCurrentStep,\r\n  setGroupOrders,\r\n  setNotifications,\r\n  setTotalQty,\r\n  setCurrentColorStep\r\n} from \"./dataSlice\"\r\nimport { Platform } from \"react-native\"\r\n\r\n\r\nexport const getOrdersStep = (stepId, storageId, token) => async (dispatch) => {\r\n  try {\r\n    const res = await DataService.getStepOrders(stepId.id, storageId, token)\r\n    if (res.success) {\r\n      dispatch(setStepOrders(res))\r\n\r\n      let productQty = 0\r\n      res.data.forEach(elem => elem.products.forEach(el => productQty += el.qty))\r\n      const total = {\r\n        orders: res.data.length,\r\n        plants: productQty\r\n      }\r\n      dispatch(setTotalQty(total))\r\n    } else {\r\n      console.log('Something went wrong!', res.errors)\r\n    }\r\n  } catch (error) {\r\n    console.log(\"GetStep_ORDERS ERROR Thunk: \" + JSON.stringify(error));\r\n  }\r\n}\r\n\r\nexport const getGroupOrdersThunk = (stepId, storageId, token) => async (dispatch) => {\r\n  try {\r\n    const res = await DataService.getGroupOrders(stepId.id, storageId, token)\r\n    if (res.success) {\r\n      dispatch(setGroupOrders(res))\r\n\r\n      let productQty = 0\r\n      res.data.forEach(elem => elem.orders.forEach(el => productQty += el.qty))\r\n      const total = {\r\n        orders: 0,\r\n        plants: productQty\r\n      }\r\n      dispatch(setTotalQty(total))\r\n    } else {\r\n      console.log('Something went wrong!', res.errors)\r\n    }\r\n  } catch (error) {\r\n    console.log(\"GetStep_ORDERS ERROR Thunk: \" + JSON.stringify(error));\r\n  }\r\n}\r\n\r\nexport const getDigStorages = (token) => async (dispatch) => {\r\n  try {\r\n    const res = await DataService.getStoragesDig(token)\r\n    if (res.success) {\r\n      dispatch(setDigStorages(res));\r\n    } else {\r\n      console.log('Something went wrong!', res.errors)\r\n    }\r\n  } catch (error) {\r\n    console.log(\"GetDig_STORAGES ERROR Thunk: \" + JSON.stringify(error));\r\n  }\r\n}\r\n\r\nexport const getStep = (token) => async (dispatch) => {\r\n  try {\r\n    const res = await DataService.getSteps(token)\r\n    if (res.success) {\r\n      dispatch(setSteps(res))\r\n      dispatch(setCurrentStep(res.data[0]))\r\n      dispatch(setCurrentColorStep(res.data[0].theme))\r\n    } else {\r\n      console.log('Something went wrong!', res.errors)\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Get_STEP ERROR Thunk: \" + JSON.stringify(error));\r\n  }\r\n}\r\n\r\nexport const getTokenThunk = (log, pass) => async (dispatch) => {\r\n  try {\r\n    const res = await DataService.getToken(log, pass)\r\n    console.log(res)\r\n    if (res.success) {\r\n      dispatch(setToken(res.data))\r\n      if(Platform.OS === 'web') {\r\n        await localStorage.setItem('token', JSON.stringify(res.data))\r\n      } else {\r\n        await SecureStore.setItemAsync('token', JSON.stringify(res.data))\r\n      }\r\n    } else {\r\n      alert(res.errors[0])\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Get_STEP ERROR Thunk: \" + JSON.stringify(error));\r\n  }\r\n}\r\n\r\nexport const getNotifiThunk = (token) => async (dispatch) => {\r\n  try {\r\n    const res = await DataService.getNotifi(token)\r\n    if (res.success) {\r\n      dispatch(setNotifications(res));\r\n    } else {\r\n      alert(res.errors[0])\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Get_STEP ERROR Thunk: \" + JSON.stringify(error));\r\n  }\r\n}\r\n\r\nexport const setNextStepGroupThunk = (token, dataOrders) => async () => {\r\n  try {\r\n    const res = await DataService.setNextStepGroup(token, dataOrders)\r\n    if (res.errors.length > 0) {\r\n      alert(res.errors[0])\r\n    } else {\r\n      console.log('Успішно!', res.success)\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Get_STEP ERROR ThunkSet: \" + JSON.stringify(error));\r\n  }\r\n}\r\n\r\n\r\nexport const updateNotifiThunk = (token, messageid, mstatus) => async () => {\r\n  try {\r\n    const res = await DataService.updateNotifi(token, messageid, mstatus)\r\n    if (res.errors.length > 0) {\r\n      alert(res.errors[0])\r\n    } else {\r\n      console.log('Something went wrong!', res.errors)\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Get_STEP ERROR ThunkSet: \" + JSON.stringify(error));\r\n  }\r\n}\r\n\r\nexport const deleteNotifiThunk = (token, messageid) => async () => {\r\n  try {\r\n    const res = await DataService.deleteNotifi(token, messageid)\r\n    if (res.errors.length > 0) {\r\n      alert(res.errors[0])\r\n    } else {\r\n      console.log('Something went wrong!', res.errors)\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Get_STEP ERROR ThunkSet: \" + JSON.stringify(error));\r\n  }\r\n}","import { View, Text, StyleSheet, TouchableHighlight } from 'react-native'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { getGroupOrdersThunk, getOrdersStep, setNextStepGroupThunk } from '../state/dataThunk'\r\nimport { MaterialIcons } from '@expo/vector-icons'\r\nimport { clearDataChange } from '../state/dataSlice'\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    textBtn: {\r\n        color: 'white',\r\n        fontSize: 14,\r\n        fontWeight: 900,\r\n    },\r\n    buttonStep: color => ({\r\n        borderRadius: 3,\r\n        backgroundColor: color,\r\n        height: 40,\r\n        padding: 5,\r\n        elevation: 3,\r\n        shadowColor: '#52006A',\r\n        shadowOffset: { width: -2, height: 4 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 3,\r\n        marginBottom: 3,\r\n        opacity: 0.95\r\n    }),\r\n    none: {\r\n        display: 'none'\r\n    }\r\n})\r\n\r\nconst colorStepBtn = {\r\n    green: {\r\n        id: 'b5ffdb30-cdb0-11ed-836c-00c12700489e',\r\n        name: 'Нове',\r\n        color: '#00721B'\r\n    },\r\n    yellow: {\r\n        id: 'b5ffdb2c-cdb0-11ed-836c-00c12700489e',\r\n        name: 'В роботі',\r\n        color: '#1FBB43'\r\n    },\r\n    pink: {\r\n        id: 'b5ffdb2e-cdb0-11ed-836c-00c12700489e',\r\n        name: 'Викопано',\r\n        color: '#83E499'\r\n    },\r\n    red: {\r\n        id: 'b5ffdb2d-cdb0-11ed-836c-00c12700489e',\r\n        name: 'В дорозі',\r\n        color: '#C2DBC7'\r\n    },\r\n    purple: {\r\n        id: 'b5ffdb2f-cdb0-11ed-836c-00c12700489e',\r\n        name: 'На Базі',\r\n        color: '#A8AFAA'\r\n    }\r\n}\r\n\r\nfunction NextStepButton({ path, currentStorageId, token, currentStep, dataChange }) {\r\n    const dispatch = useDispatch()\r\n    const sendData = async (pathValue) => {\r\n        await dispatch(setNextStepGroupThunk(token[0].token, dataChange))\r\n        await dispatch(clearDataChange())\r\n        if (pathValue === \"Замовлення\") {\r\n            await dispatch(getOrdersStep(currentStep, currentStorageId, token[0].token))\r\n        } else if (pathValue === \"Рослини Замовлення\") {\r\n            await dispatch(getGroupOrdersThunk(currentStep, currentStorageId, token[0].token))\r\n        }\r\n    }\r\n\r\n    const setNextStepName = (val) => {\r\n        switch (val) {\r\n            case colorStepBtn.green.id:\r\n                return name = colorStepBtn.yellow.name\r\n            case colorStepBtn.yellow.id:\r\n                return name = colorStepBtn.pink.name\r\n            case colorStepBtn.pink.id:\r\n                return name = colorStepBtn.red.name\r\n            case colorStepBtn.red.id:\r\n                return name = colorStepBtn.purple.name\r\n            case colorStepBtn.purple.id:\r\n                return null\r\n            default:\r\n                alert('Step Name not defined')\r\n        }\r\n    }\r\n\r\n    const setNextStepColor = (val) => {\r\n        switch (val) {\r\n            case colorStepBtn.green.id:\r\n                return colorStepBtn.yellow.color\r\n            case colorStepBtn.yellow.id:\r\n                return colorStepBtn.pink.color\r\n            case colorStepBtn.pink.id:\r\n                return colorStepBtn.red.color\r\n            case colorStepBtn.red.id:\r\n                return colorStepBtn.purple.color\r\n            case colorStepBtn.purple.id:\r\n                return 'gray'\r\n            default:\r\n                alert('Step Color not defined')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <View>\r\n            {dataChange.length > 0 ? <View style={{ position: 'absolute', right: 7, bottom: 0 }} >\r\n\r\n                <TouchableHighlight\r\n                    style={[styles.buttonStep(setNextStepColor(currentStep.id)), dataChange.length === 0 && styles.none]}\r\n                    onPress={() => sendData(path)}\r\n                >\r\n                    <MaterialIcons name=\"done-outline\" size={20} color=\"snow\" style={{ flex: 1 }} >\r\n                        <Text\r\n                            style={styles.textBtn}\r\n                            allowFontScaling={true}\r\n                            maxFontSizeMultiplier={1}\r\n                        > {setNextStepName(currentStep.id)} </Text>\r\n                    </MaterialIcons>\r\n                </TouchableHighlight>\r\n            </View> : null}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentStep: state.currentStep,\r\n    dataChange: state.dataChange,\r\n    token: state.token,\r\n    currentStorageId: state.currentStorageId\r\n})\r\n\r\nexport default connect(mapStateToProps)(NextStepButton)\r\n\r\n","import Checkbox from 'expo-checkbox'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Text, TextInput, StyleSheet, View } from 'react-native'\r\nimport { useDispatch, connect } from 'react-redux'\r\nimport { clearDataChangeItem, setDataChange } from '../state/dataSlice'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\r\n\r\n\r\n\r\nfunction RenderPlants({ currentStorageId, orderId, selectedAllOrder, prodactElem, currentStep, orders }) {\r\n    const dispatch = useDispatch()\r\n    const { characteristic, lastChange, product, qty, unit } = prodactElem\r\n    const [plantCheckBox, setPlantCheckBox] = useState(selectedAllOrder)\r\n    const [qtyState, setQty] = useState(qty)\r\n\r\n    const checkInput = (value) => {\r\n        if (Number(value) || value === '') {\r\n            if (Number(value) > Number(qty)) {\r\n                alert('Кількість рослин не може бути більша ніж в замовленні')\r\n            } else {\r\n                setQty(value)\r\n            }\r\n        } else {\r\n            alert('Введіть кількіть викопаних рослин - цифрами')\r\n        }\r\n    }\r\n\r\n    const setModalState = () => {\r\n        const orders = {\r\n            storageId: currentStorageId,\r\n            currentstepId: currentStep.id,\r\n            orderId: orderId,\r\n            productid: product.id,\r\n            characteristicid: characteristic.id,\r\n            unitid: unit.id,\r\n            actionqty: Number(qtyState)\r\n        }\r\n        dispatch(setDataChange(orders))\r\n    }\r\n\r\n    const inputOnBlur = () => {\r\n        if (qtyState === '') {\r\n            setQty(qty)\r\n        } else {\r\n            setModalState()\r\n            setPlantCheckBox(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedAllOrder === true && plantCheckBox === true) {\r\n            setModalState()\r\n        } else if (plantCheckBox === false) {\r\n            dispatch(clearDataChangeItem({\r\n                orderId: orderId,\r\n                productid: product.id,\r\n                characteristicid: characteristic.id,\r\n            }))\r\n        } else if (plantCheckBox === true) {\r\n            setModalState()\r\n        }\r\n    }, [selectedAllOrder, plantCheckBox, orders])\r\n    \r\n    return (\r\n        <View style={styles.infoBlock}>\r\n            <View style={styles.costLineWrapper}>\r\n                <Text style={styles.plantName}\r\n                    allowFontScaling={true}\r\n                    maxFontSizeMultiplier={1}\r\n                >{product.name}</Text>\r\n                <View style={styles.info}>\r\n                    <Text\r\n                        style={styles.characteristics}\r\n                        allowFontScaling={true}\r\n                        maxFontSizeMultiplier={1}\r\n                    >{characteristic.name}</Text>\r\n                    <Text\r\n                        style={styles.changeDate}\r\n                        allowFontScaling={true}\r\n                        maxFontSizeMultiplier={1}\r\n                    >змінено: {lastChange}</Text>\r\n                </View>\r\n                <View style={styles.info}>\r\n                    <MaterialCommunityIcons name=\"pine-tree\" size={20} color=\"black\">\r\n                        <MaterialCommunityIcons name=\"shovel\" size={15} color=\"black\" />\r\n                        <Text\r\n                            style={styles.quantity}\r\n                            allowFontScaling={true}\r\n                            maxFontSizeMultiplier={1}\r\n                        > {qty} шт</Text>\r\n                    </MaterialCommunityIcons>\r\n                    {currentStep.rightToChange ?\r\n                        <View style={styles.changeinfo}>\r\n                            <View style={styles.changeinfoblock}>\r\n                                <Text\r\n                                    style={styles.quantity}\r\n                                    allowFontScaling={true}\r\n                                    maxFontSizeMultiplier={1}\r\n                                >\r\n                                    Викопано:\r\n                                </Text>\r\n                                <TextInput\r\n                                    style={styles.input}\r\n                                    onChangeText={checkInput}\r\n                                    value={String(qtyState)}\r\n                                    inputMode='numeric'\r\n                                    keyboardType=\"numeric\"\r\n                                    onBlur={(val) => inputOnBlur()}\r\n                                    autoFocus={false}\r\n                                    onFocus={() => setQty('')}\r\n                                    allowFontScaling={true}\r\n                                    maxFontSizeMultiplier={1}\r\n                                />\r\n                            </View>\r\n                            <Checkbox\r\n                                value={plantCheckBox}\r\n                                color='#45aa45'\r\n                                onValueChange={() => {\r\n                                    setPlantCheckBox(!plantCheckBox)\r\n                                }}\r\n                                style={styles.checkBox}\r\n                            />\r\n                        </View> : null}\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentStep: state.currentStep,\r\n    orders: state.stepOrders,\r\n    currentStorageId: state.currentStorageId,\r\n})\r\nexport default connect(mapStateToProps)(RenderPlants)\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    infoBlock: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        width: '100%',\r\n        borderTopWidth: 2,\r\n        borderTopColor: '#b0acb0',\r\n        marginTop: 10,\r\n    },\r\n    textStr: {\r\n        fontWeight: 600,\r\n    },\r\n    costLineWrapper: {\r\n        height: 'auto',\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        paddingLeft: 3,\r\n        paddingRight: 3,\r\n    },\r\n    plantName: {\r\n        height: 'auto',\r\n        width: 'auto',\r\n        fontSize: 13,\r\n        fontWeight: '800',\r\n        paddingTop: 5,\r\n        textShadowRadius: 2\r\n    },\r\n    characteristics: {\r\n        height: 'auto',\r\n        fontSize: 13,\r\n        textAlignVertical: 'center',\r\n        paddingLeft: 10,\r\n        flex: 1\r\n    },\r\n    info: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    quantity: {\r\n        height: 'auto',\r\n        textAlignVertical: 'center',\r\n        alignSelf: 'center',\r\n        paddingBottom: 5,\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    },\r\n    changeinfo: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    changeinfoblock: {\r\n        flexDirection: 'row'\r\n    },\r\n    input: {\r\n        height: 28,\r\n        width: 40,\r\n        margin: 7,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        textAlign: 'center',\r\n        alignSelf: 'flex-start',\r\n    },\r\n    checkBox: {\r\n        alignSelf: 'center',\r\n        height: 28,\r\n        width: 28,\r\n    },\r\n    changeDate: {\r\n        alignSelf: 'flex-end',\r\n        fontSize: 11,\r\n        fontWeight: 900,\r\n        color: '#c5c5c5'\r\n    },\r\n})","import Checkbox from \"expo-checkbox\"\r\nimport { memo, useEffect, useState } from \"react\"\r\nimport { StyleSheet, Text, View } from \"react-native\"\r\nimport { connect } from \"react-redux\"\r\nimport shortid from \"shortid\"\r\nimport { DataService } from \"../state/dataService\"\r\nimport RenderPlants from \"./RenderPlants\"\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\r\nimport { FontAwesome5 } from '@expo/vector-icons'\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    rowFront: {\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        borderBottomColor: 'black',\r\n        justifyContent: 'center',\r\n        height: 'auto',\r\n        marginBottom: 20,\r\n        borderRadius: 5,\r\n        margin: 5,\r\n        elevation: 10,\r\n        shadowColor: 'black',\r\n        shadowOffset: { width: -2, height: 4 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 3,\r\n    },\r\n    costLineWrapper: {\r\n        height: 'auto',\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        paddingBottom: 10,\r\n    },\r\n    orderInfo: {\r\n        height: 'auto',\r\n    },\r\n    infoContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingTop: 7,\r\n        paddingLeft: 3,\r\n        paddingRight: 5,\r\n        paddingBottom: 3\r\n    },\r\n    orderClient: {\r\n        height: 'auto',\r\n        lineHeight: 20,\r\n        paddingBottom: 5,\r\n        fontWeight: 900,\r\n        fontSize: 15,\r\n        width: '94%',\r\n        textShadowRadius: 2\r\n    },\r\n    viewGroup: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    orderNum: {\r\n       fontSize: 13,\r\n       fontWeight: 600\r\n    },\r\n    orderShipment: {\r\n        height: 'auto',\r\n        fontSize: 12,\r\n        fontWeight: 600\r\n    },\r\n    quantity: {\r\n        height: 'auto',\r\n        textAlignVertical: 'center',\r\n        alignSelf: 'center',\r\n        fontSize: 12,\r\n        fontWeight: 600\r\n    },\r\n    textStr: {\r\n        fontWeight: 600,\r\n    },\r\n    checkBox: {\r\n        height: 25,\r\n        width: 25,\r\n    },\r\n\r\n})\r\n\r\n\r\nfunction RenderOrders({ orders, token, rightToChange }) {\r\n    const [selectedAllOrder, setSelectedAllOrder] = useState(false)\r\n    const [comentInfo, setComentInfo] = useState('-')\r\n    const { customerName, orderNo, shipmentMethod, shipmentDate, products, orderId } = orders\r\n\r\n    let qty = 0\r\n    products.forEach(el => qty += el.qty)\r\n\r\n    const getComent = async () => {\r\n        const res = await DataService.getOrderInfo(token, orderId)\r\n        setComentInfo(res.data[0].comment)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getComent()\r\n    }, [orders])\r\n\r\n    return (        \r\n            <View style={styles.rowFront} >\r\n                <View style={styles.costLineWrapper}>\r\n                    <View style={styles.orderInfo}>\r\n                        <View style={styles.infoContainer}>\r\n                            <Text style={styles.orderClient}\r\n                                allowFontScaling={true}\r\n                                maxFontSizeMultiplier={1}\r\n                            >{customerName}</Text>\r\n                            {rightToChange ?\r\n                                <Checkbox\r\n                                    value={selectedAllOrder}\r\n                                    color='#45aa45'\r\n                                    onValueChange={() => setSelectedAllOrder(!selectedAllOrder)}\r\n                                    style={styles.checkBox}\r\n                                /> : null}\r\n                        </View>\r\n                        <View style={styles.viewGroup}>\r\n                            <FontAwesome5 name=\"truck-loading\" size={14} color=\"black\" >\r\n                                <Text\r\n                                    style={styles.orderShipment}\r\n                                    allowFontScaling={true}\r\n                                    maxFontSizeMultiplier={1}\r\n                                ><Text style={styles.textStr}> {shipmentMethod}</Text> </Text>\r\n                            </FontAwesome5>\r\n                            <MaterialCommunityIcons name=\"pine-tree\" size={20} color=\"black\">\r\n                                <MaterialCommunityIcons name=\"pine-tree\" size={14} color=\"black\" />\r\n                                <Text\r\n                                    style={styles.quantity}\r\n                                    allowFontScaling={true}\r\n                                    maxFontSizeMultiplier={1}\r\n                                > {qty} шт</Text>\r\n                            </MaterialCommunityIcons>\r\n                        </View>\r\n                        <View style={styles.viewGroup}>\r\n                            <MaterialCommunityIcons name=\"truck-delivery-outline\" size={22} color=\"black\" >\r\n                                <Text\r\n                                    style={styles.orderShipment}\r\n                                    allowFontScaling={true}\r\n                                    maxFontSizeMultiplier={1}\r\n                                > {shipmentDate}</Text>\r\n                            </MaterialCommunityIcons>\r\n                            <MaterialCommunityIcons name=\"clipboard-list-outline\" size={19} color=\"black\">\r\n                            <Text\r\n                                style={styles.orderNum}\r\n                                allowFontScaling={true}\r\n                                maxFontSizeMultiplier={1}\r\n                            > {orderNo} </Text>\r\n                            </MaterialCommunityIcons>\r\n                        </View>   \r\n                        <MaterialCommunityIcons name=\"comment-text-outline\" size={16} color=\"black\" >                     \r\n                            <Text\r\n                                allowFontScaling={true}\r\n                                maxFontSizeMultiplier={1}\r\n                                style={{ fontWeight: 800, fontSize: 13 }}\r\n                            > - {comentInfo} </Text> \r\n                            </MaterialCommunityIcons>\r\n                    </View>\r\n                    <View >\r\n                        {products.map(elem =>\r\n                            <RenderPlants\r\n                                key={shortid.generate()}\r\n                                orderId={orderId}\r\n                                prodactElem={elem}\r\n                                selectedAllOrder={selectedAllOrder}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                </View>\r\n            </View>        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    token: state.token,\r\n})\r\n\r\nexport default connect(mapStateToProps)(memo(RenderOrders))","import { useFocusEffect } from '@react-navigation/native'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { View, Text, StyleSheet, FlatList, ActivityIndicator, Platform, RefreshControl } from 'react-native'\r\nimport { SafeAreaView } from 'react-native-safe-area-context'\r\nimport { useDispatch, connect } from 'react-redux'\r\nimport ButtonsBar from '../components/ButtonsBar'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport RenderOrders from '../components/RenderOrders'\r\nimport { getOrdersStep } from '../state/dataThunk'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\r\n\r\nfunction OrdersScreen({ orders, route, currentStep, totalPlantQty, totalOrderQty, storageId }) {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const [refresh, setRefresh] = useState(false)\r\n    const { token } = route.params\r\n\r\n    const keyExtractor = useCallback((item, index) => (item.orderId.toString() + index), [])\r\n    const renderItem = useCallback(({item}) => {\r\n        return  <RenderOrders orders={item} rightToChange={currentStep.rightToChange} />\r\n      }, [currentStep])\r\n    \r\n    const getOrders = async () => {\r\n        setLoading(true)\r\n        await new Promise((resolve) => setTimeout(resolve, 200))\r\n        await dispatch(getOrdersStep(currentStep, storageId, token[0].token))\r\n    }\r\n\r\n    const onRefresh = async () => {\r\n        setRefresh(true)\r\n        await dispatch(getOrdersStep(currentStep, storageId, token[0].token))\r\n        setRefresh(false)\r\n    }\r\n\r\n    useFocusEffect(\r\n        useCallback(() => {\r\n            getOrders().then(() => setLoading(false))\r\n        }, [currentStep])\r\n    )\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container} >\r\n            <View style={styles.infoblock}>\r\n                <MaterialCommunityIcons name=\"pine-tree\" size={24} color=\"black\">\r\n                    <MaterialCommunityIcons name=\"pine-tree\" size={18} color=\"black\" />\r\n                    <Text style={styles.textinfo}> всіх рослин: {totalPlantQty} </Text>\r\n                </MaterialCommunityIcons>\r\n                <MaterialCommunityIcons name=\"clipboard-list-outline\" size={24} color=\"black\">\r\n                    <Text style={styles.textinfo}> замовлень: {totalOrderQty} </Text>\r\n                </MaterialCommunityIcons>\r\n            </View>\r\n            {loading ?\r\n                <View style={styles.loader}>\r\n                    <ActivityIndicator size=\"large\" color=\"#45aa45\" />\r\n                </View> :\r\n                orders.length === 0 ?\r\n                    <View style={styles.costLineWrapper}>\r\n                        <Text style={styles.noneData}>Немає замовлень з таким сатусом</Text>\r\n                    </View> :\r\n                    <FlatList\r\n                        data={orders}\r\n                        renderItem={renderItem}\r\n                        keyExtractor={keyExtractor}\r\n                        refreshControl={<RefreshControl onRefresh={onRefresh} refreshing={refresh} />}\r\n                        style={{ marginBottom: 10 }}\r\n                        initialNumToRender='4'\r\n                        maxToRenderPerBatch='4'\r\n                    />\r\n            }\r\n            <NextStepButton path={route.name} />\r\n            <ButtonsBar storageId={storageId} token={token} />\r\n\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.stepOrders,\r\n        currentStep: state.currentStep,\r\n        totalPlantQty: state.totalPlantQty,\r\n        totalOrderQty: state.totalOrderQty,\r\n        storageId: state.currentStorageId\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(OrdersScreen)\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        marginBottom: 3,\r\n        marginTop: Platform.OS === 'ios' ? -45 : 0,\r\n    },\r\n    loader: {\r\n        height: 'auto',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        flex: 1\r\n    },\r\n    textinfo: {\r\n        color: 'black',\r\n        fontSize: 13,\r\n        fontWeight: 700,\r\n        textAlign: 'center',\r\n    },\r\n    infoblock: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        marginBottom: 20,\r\n        marginTop: 15\r\n    },\r\n    costLineWrapper: {\r\n        height: 'auto',\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    noneData: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        color: 'gray',\r\n    },\r\n})","import Checkbox from \"expo-checkbox\"\r\nimport { memo, useEffect, useState } from \"react\"\r\nimport { SafeAreaView, StyleSheet, Text, TextInput, View } from \"react-native\"\r\nimport { connect, useDispatch } from \"react-redux\"\r\nimport { DataService } from \"../state/dataService\"\r\nimport { clearDataChangeItem, setDataChange } from \"../state/dataSlice\"\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\r\nimport { FontAwesome5 } from '@expo/vector-icons'\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    viewContainer: {\r\n        marginBottom: 5,\r\n        paddingTop: 10,\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        borderTopWidth: 2,\r\n        borderTopColor: '#b0acb0',\r\n    },\r\n    infoBlock: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flex: 1,\r\n        \r\n    },\r\n    input: {\r\n        height: 30,\r\n        width: 40,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        textAlign: 'center',\r\n        alignSelf: 'center',\r\n        marginRight: 12,\r\n    },\r\n    orderInfoBlock: {\r\n        flexDirection: 'row',\r\n        paddingBottom: 2,\r\n        paddingTop: 2,\r\n        paddingRight: 2,\r\n        flex: 1\r\n    },\r\n    orderInfoChange: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    orderNames: {\r\n        alignSelf: 'center',\r\n        width: 200,\r\n        padding: 3,\r\n    },\r\n    qtyInfo: {\r\n        alignSelf: 'center',\r\n        marginLeft: 0,\r\n        fontSize: 14,\r\n        fontWeight: 700,\r\n    },\r\n    infoComent: {\r\n        flexDirection: 'row',\r\n        width: '100%'\r\n    },\r\n    textClient: {\r\n        fontSize: 11,\r\n        fontWeight: 500,\r\n    },\r\n    nameClient: {\r\n        fontSize: 13,\r\n        fontWeight: 900,\r\n        color: '#30302f'\r\n    },\r\n    textDataChange: {\r\n        fontSize: 10,\r\n        fontWeight: 900,\r\n        color: '#c5c5c5',\r\n        alignSelf: 'flex-end',\r\n    },\r\n    textStrong: {\r\n        fontSize: 13,\r\n        fontWeight: 700,\r\n    },\r\n    checkBox: {\r\n        alignSelf: 'center',\r\n        height: 28,\r\n        width: 28,\r\n    },\r\n})\r\n\r\nfunction RenderOrderByGroup({ order, selectedAll, plant, currentStep, currentStorageId, token }) {\r\n    const dispatch = useDispatch()\r\n    const { orderId, orderNo, customerName, qty, shipmentDate, shipmentMethod, lastChange } = order\r\n    const { characteristic, product, unit } = plant\r\n    const [orderCheckBox, setOrderCheckBox] = useState(selectedAll)\r\n    const [qtyInput, setQtyInput] = useState(qty)\r\n    const [comentInfo, setComentInfo] = useState('0') \r\n\r\n    const getInfo = async () => {\r\n        const res = await DataService.getOrderInfo(token, orderId)\r\n        setComentInfo(res.data[0].comment)\r\n    }\r\n\r\n    const setModalState = () => {\r\n        const orders = {\r\n            storageId: currentStorageId,\r\n            currentstepId: currentStep.id,\r\n            orderId: orderId,\r\n            productid: product.id,\r\n            characteristicid: characteristic.id,\r\n            unitid: unit.id,\r\n            actionqty: Number(qtyInput)\r\n        }\r\n        dispatch(setDataChange(orders))\r\n    }\r\n\r\n    const checkInput = (value) => {\r\n        if (Number(value) || value === '') {\r\n            if (Number(value) > Number(qty)) {\r\n                alert('Кількість рослин не може бути більша ніж в замовленні')\r\n            } else {\r\n                setQtyInput(value)\r\n            }\r\n        } else {\r\n            alert('Введіть кількіть викопаних рослин - цифрами')\r\n        }\r\n    }\r\n\r\n    const inputOnBlur = () => {\r\n        if (qtyInput === '') {\r\n            setQtyInput(qty)\r\n        } else {\r\n            setModalState()\r\n            setOrderCheckBox(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo()\r\n        if (selectedAll === true && orderCheckBox === true) {\r\n            setModalState()\r\n        } else if (orderCheckBox === false) {\r\n            dispatch(clearDataChangeItem({\r\n                orderId: orderId,\r\n                productid: product.id,\r\n                characteristicid: characteristic.id,\r\n            }))\r\n        } else if (orderCheckBox === true) {\r\n            setModalState()\r\n        }\r\n    }, [selectedAll, orderCheckBox])\r\n   \r\n    return (\r\n        <SafeAreaView style={styles.viewContainer}>\r\n            <Text\r\n                style={styles.nameClient}\r\n                allowFontScaling={true}\r\n                maxFontSizeMultiplier={1}\r\n                >{customerName}</Text>\r\n            <View style={styles.infoBlock}>\r\n                <View style={styles.orderInfoBlock}>\r\n                    <View style={styles.orderNames}>\r\n                        <FontAwesome5 name=\"truck-loading\" size={13} color=\"black\" >\r\n                            <Text\r\n                                style={styles.textStrong}\r\n                                allowFontScaling={true}\r\n                                maxFontSizeMultiplier={1}\r\n                            > {shipmentMethod}</Text>\r\n                        </FontAwesome5>                        \r\n                        \r\n                        <MaterialCommunityIcons name=\"truck-delivery-outline\" size={18} color=\"black\" >\r\n                        <Text\r\n                            style={styles.textClient}\r\n                            allowFontScaling={true}\r\n                            maxFontSizeMultiplier={1}\r\n                        > {shipmentDate}</Text>\r\n                        </MaterialCommunityIcons>\r\n                        <MaterialCommunityIcons name=\"clipboard-list-outline\" size={15} color=\"black\">\r\n                        <Text\r\n                            style={styles.textClient}\r\n                            allowFontScaling={true}\r\n                            maxFontSizeMultiplier={1}\r\n                        > {orderNo}</Text>\r\n                        </MaterialCommunityIcons>\r\n                    </View>\r\n                    <Text\r\n                        style={styles.qtyInfo}\r\n                        allowFontScaling={true}\r\n                        maxFontSizeMultiplier={1}\r\n                    > {qty} шт</Text>\r\n                </View>\r\n                <View style={{ alignSelf: 'center', flex: 1, flexDirection: 'column' }} >\r\n                    {currentStep.rightToChange ?\r\n                        <View style={styles.orderInfoChange}>\r\n                            <TextInput\r\n                                style={styles.input}\r\n                                onChangeText={checkInput}\r\n                                value={String(qtyInput)}\r\n                                inputMode='numeric'\r\n                                keyboardType=\"numeric\"\r\n                                onBlur={(val) => inputOnBlur()}\r\n                                autoFocus={false}\r\n                                onFocus={() => setQtyInput('')}\r\n                                allowFontScaling={true}\r\n                                maxFontSizeMultiplier={1}\r\n                            />\r\n                            <Checkbox\r\n                                value={orderCheckBox}\r\n                                color='#45aa45'\r\n                                onValueChange={() => {\r\n                                    setOrderCheckBox(!orderCheckBox)\r\n                                }}\r\n                                style={styles.checkBox}\r\n                            />\r\n                        </View> : null}\r\n                    <Text style={styles.textDataChange}\r\n                        allowFontScaling={true}\r\n                        maxFontSizeMultiplier={1}\r\n                    >змінено: {lastChange} </Text>\r\n                </View>\r\n            </View>\r\n            <View style={styles.infoComent}>  \r\n                <MaterialCommunityIcons name=\"comment-text-outline\" size={16} color=\"black\" >           \r\n                    <Text\r\n                        style={styles.textClient}\r\n                        allowFontScaling={true}\r\n                        maxFontSizeMultiplier={1}\r\n                    ><Text style={{ fontWeight: 800 }}> - {comentInfo} </Text></Text> \r\n                </MaterialCommunityIcons>   \r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentStep: state.currentStep,\r\n    currentStorageId: state.currentStorageId,\r\n    token: state.token,\r\n    groupOrders: state.groupOrders\r\n})\r\n\r\nexport default connect(mapStateToProps)(memo(RenderOrderByGroup))","import Checkbox from \"expo-checkbox\"\r\nimport { memo, useState } from \"react\"\r\nimport { Text, StyleSheet, View } from \"react-native\"\r\nimport shortid from \"shortid\"\r\nimport RenderOrderByGroup from \"./RenderOrderByGroup\"\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    rowFront: {\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        borderBottomColor: 'black',\r\n        justifyContent: 'center',\r\n        height: 'auto',\r\n        marginBottom: 20,\r\n        paddingBottom: 5,\r\n        borderRadius: 5,\r\n        margin: 5,\r\n        elevation: 5,\r\n        shadowColor: 'black',\r\n        shadowOffset: { width: -2, height: 4 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 3,\r\n    },\r\n    costLineWrapper: {\r\n        height: 'auto',\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        paddingLeft: 3,\r\n        paddingRight: 3,\r\n    },\r\n    plantName: {\r\n        height: 'auto',\r\n        fontSize: 15,\r\n        fontWeight: '700',\r\n        width: '94%',\r\n        textShadowRadius: 3,\r\n        paddingRight: 2\r\n    },\r\n    characteristics: {\r\n        height: 'auto',\r\n        fontSize: 13,\r\n        textAlignVertical: 'center',\r\n        paddingLeft: 10,\r\n        paddingBottom: 1,\r\n        flex: 1\r\n    },\r\n    info: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingRight: 3,\r\n    },\r\n    quantity: {\r\n        height: 'auto',\r\n        textAlignVertical: 'center',\r\n        alignSelf: 'center',\r\n        fontSize: 12,\r\n        fontWeight: 600\r\n    },\r\n    changeinfo: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingTop: 7,\r\n        paddingLeft: 3,\r\n    },\r\n    infoContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingTop: 7,\r\n        paddingLeft: 3,\r\n        paddingRight: 5\r\n    },\r\n    orderInfoBlock: {\r\n        flexDirection: 'column',\r\n        marginTop: 3,\r\n        width: '100%',\r\n    },\r\n    checkBox: {\r\n        height: 25,\r\n        width: 25,\r\n    },\r\n})\r\n\r\nfunction RenderPlantsGroup({ item, rightToChange }) {\r\n   const [selectedAll, setSelectedAll] = useState(false)\r\n    let qty = 0\r\n    item.orders.forEach(elem => qty += elem.qty)\r\n\r\n    return (        \r\n            <View style={styles.rowFront}>\r\n                <View style={styles.costLineWrapper}>\r\n                    <View style={styles.infoContainer}>\r\n                        <Text\r\n                            style={styles.plantName}\r\n                            allowFontScaling={true}\r\n                            maxFontSizeMultiplier={1}\r\n                        >{item.product.name}</Text>\r\n                        {rightToChange ?\r\n                            <Checkbox\r\n                                value={selectedAll}\r\n                                color='#45aa45'\r\n                                onValueChange={() => setSelectedAll(!selectedAll)}\r\n                                style={styles.checkBox}\r\n                            /> : null}\r\n                    </View>\r\n                    <View style={styles.info}>\r\n                        <Text style={styles.characteristics}\r\n                            allowFontScaling={true}\r\n                            maxFontSizeMultiplier={1}\r\n                        >{item.characteristic.name}</Text>\r\n                        <MaterialCommunityIcons name=\"pine-tree\" size={20} color=\"black\">\r\n                            <MaterialCommunityIcons name=\"pine-tree\" size={14} color=\"black\" />\r\n                            <Text\r\n                                style={styles.quantity}\r\n                                allowFontScaling={true}\r\n                                maxFontSizeMultiplier={1}\r\n                            > {qty} шт</Text>\r\n                        </MaterialCommunityIcons>\r\n                    </View>\r\n                    <View style={styles.changeinfo}>\r\n                        <View style={styles.orderInfoBlock}>\r\n                            {item.orders.map(elem =>\r\n                                <RenderOrderByGroup\r\n                                    key={shortid.generate()}\r\n                                    plant={item} order={elem}\r\n                                    selectedAll={selectedAll}\r\n                                />\r\n                            )}\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default memo(RenderPlantsGroup)","import { useFocusEffect } from '@react-navigation/native'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { Text, StyleSheet, View, FlatList, ActivityIndicator, Platform, RefreshControl } from 'react-native'\r\nimport { SafeAreaView } from 'react-native-safe-area-context'\r\nimport { useDispatch, connect } from 'react-redux'\r\nimport ButtonsBar from '../components/ButtonsBar'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport RenderPlantsGroup from '../components/RenderPlantsGroup'\r\nimport { getGroupOrdersThunk } from '../state/dataThunk'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\r\n\r\n\r\n\r\n\r\nfunction AllPlantsScreen({ route,  groupOrders, currentStep, totalPlantQty, storageId }) {\r\n    const [loading, setLoading] = useState(true)\r\n    const { token } = route.params\r\n    const [refresh, setRefresh] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const renderItem = useCallback(({item}) => {\r\n      return  <RenderPlantsGroup item={item} rightToChange={currentStep.rightToChange} />\r\n    }, [currentStep])\r\n    const keyExtractor = useCallback((item, index) => (item.product.id.toString() + index), [])\r\n\r\n    const getGroupOrders = async () => {\r\n        setLoading(true)\r\n        await new Promise((resolve) => setTimeout(resolve, 200))\r\n        await dispatch(getGroupOrdersThunk(currentStep, storageId, token[0].token))\r\n    }\r\n\r\n    const onRefresh = async () => {\r\n        setRefresh(true)\r\n        await dispatch(getGroupOrdersThunk(currentStep, storageId, token[0].token))\r\n        setRefresh(false)\r\n    }\r\n    \r\n    useFocusEffect(        \r\n        useCallback(() => {\r\n            getGroupOrders().then(() => setLoading(false))\r\n        }, [currentStep])\r\n        \r\n    )    \r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.infoblock}>\r\n                <MaterialCommunityIcons name=\"pine-tree\" size={24} color=\"black\">\r\n                    <MaterialCommunityIcons name=\"pine-tree\" size={18} color=\"black\" />\r\n                    <Text style={styles.textinfo}> всіх рослин: {totalPlantQty} </Text>\r\n                </MaterialCommunityIcons>\r\n            </View>\r\n            {loading ?\r\n                <View style={styles.loader}>\r\n                    <ActivityIndicator size=\"large\" color=\"#45aa45\" />\r\n                </View> :\r\n                groupOrders.length == 0 ?\r\n                    <View style={styles.costLineWrapper}>\r\n                        <Text\r\n                            style={styles.noneData}\r\n                            allowFontScaling={true}\r\n                            maxFontSizeMultiplier={1}\r\n                        >В цьому полі немає рослин з таким сатусом</Text>\r\n                    </View> :\r\n                    <FlatList\r\n                        data={groupOrders}\r\n                        renderItem={renderItem}\r\n                        keyExtractor={keyExtractor}\r\n                        refreshControl={<RefreshControl onRefresh={onRefresh} refreshing={refresh} />}\r\n                        \r\n                        refreshing={refresh}\r\n                        style={{ marginBottom: 10 }}\r\n                        initialNumToRender='4'\r\n                        maxToRenderPerBatch='4'\r\n                    />\r\n            }\r\n            <NextStepButton path={route.name} />\r\n            <ButtonsBar storageId={storageId} />\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        groupOrders: state.groupOrders,\r\n        currentStep: state.currentStep,\r\n        totalPlantQty: state.totalPlantQty,\r\n        storageId: state.currentStorageId\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(AllPlantsScreen)\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        marginBottom: 3,\r\n        marginTop: Platform.OS === 'ios' ? -45 : 0,\r\n    },\r\n    costLineWrapper: {\r\n        height: 'auto',\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    textinfo: {\r\n        color: 'black',\r\n        fontSize: 13,\r\n        fontWeight: 700,\r\n    },\r\n    infoblock: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        marginBottom: 20,\r\n        marginTop: 15\r\n    },\r\n    loader: {\r\n        height: 'auto',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        flex: 1\r\n    },\r\n    noneData: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        color: 'gray',\r\n    },\r\n})","import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs'\r\n\r\nimport Order from './Order'\r\nimport AllPlants from './AllPlants'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { setStorageId } from '../state/dataSlice';\r\nimport { useEffect } from 'react';\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\nfunction FildScreen({ currentColor, token, digStorages }) {    \r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(digStorages.length === 1) {\r\n            dispatch(setStorageId(digStorages[0].id))\r\n        }         \r\n    }, [])\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            initialRouteName=\"Замовлення\"\r\n            screenOptions={{\r\n                tabBarActiveTintColor: '#ffff',\r\n                tabBarLabelStyle: { fontSize: 12, fontWeight: '700' },\r\n                tabBarStyle: { backgroundColor: currentColor, },\r\n                tabBarIndicatorStyle: { backgroundColor: '#ffff', height: 4, },\r\n                lazy: true,\r\n            }}\r\n        >\r\n            <Tab.Screen\r\n                name=\"Замовлення\"\r\n                component={Order}\r\n                options={{ tabBarLabel: 'Замовлення' }}\r\n                initialParams={{ token: token }}\r\n            />\r\n            <Tab.Screen\r\n                name=\"Рослини Замовлення\"\r\n                component={AllPlants}\r\n                options={{ tabBarLabel: 'Всі Рослини' }}\r\n                initialParams={{ token: token }}\r\n            />\r\n            \r\n        </Tab.Navigator>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentColor: state.currentColorStep,\r\n    token: state.token,\r\n    digStorages: state.digStorages\r\n})\r\n\r\nexport default connect(mapStateToProps)(FildScreen)\r\n\r\n","import { View, Text, StyleSheet, TouchableOpacity, FlatList, Platform } from 'react-native'\r\nimport { SafeAreaView } from 'react-native-safe-area-context'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { setStorageId } from '../state/dataSlice'\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: '100%',\r\n        height: '100%',\r\n        flex: 1,\r\n        marginTop: Platform.OS === 'ios' ? -45 : 0,\r\n    },\r\n    containerView: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#d8fff2',\r\n    },\r\n    text: {\r\n        color: 'black',\r\n        fontSize: 20,\r\n        marginBottom: 15,\r\n        marginTop: 25\r\n    },\r\n    button: {\r\n        padding: 10,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 10,\r\n        backgroundColor: \"#45aa45\",\r\n        minWidth: \"63%\",\r\n        minHeight: 50,\r\n        elevation: 1,\r\n        shadowOffset: { width: -3, height: 3 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 3,\r\n        shadowColor: 'black',\r\n        justifyContent: 'center',\r\n    },\r\n    textBtn: {\r\n        color: 'white',\r\n        alignSelf: 'center',\r\n        fontSize: 18,\r\n        fontWeight: 800,\r\n    }\r\n})\r\n\r\n\r\nfunction MainScreen({ navigation, digStorages }) {\r\n    const dispatch = useDispatch()\r\n\r\n    function renderFildsButton({ item }) {\r\n        return (\r\n            <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={() => {\r\n                    dispatch(setStorageId(item.id))\r\n                    navigation.navigate('Поле', { title: item.name })\r\n                }}\r\n            >\r\n                <Text\r\n                    key={item.id}\r\n                    style={styles.textBtn}\r\n                    allowFontScaling={true}\r\n                    maxFontSizeMultiplier={1}\r\n                > {item.name} </Text>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.containerView}>\r\n                <Text\r\n                    style={styles.text}\r\n                    allowFontScaling={true}\r\n                    maxFontSizeMultiplier={1}\r\n                > Виберіть поле </Text>\r\n                <FlatList\r\n                    data={digStorages}\r\n                    renderItem={renderFildsButton}\r\n                    keyExtractor={item => item.id.toString()}\r\n                    style={{padding: 10}}\r\n                />\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    digStorages: state.digStorages,\r\n})\r\n\r\nexport default connect(mapStateToProps)(MainScreen)\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { View, Text, StyleSheet, TouchableHighlight, SafeAreaView, TextInput, ActivityIndicator, Image, Platform } from 'react-native'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { getTokenThunk } from '../state/dataThunk'\r\nimport * as SecureStore from 'expo-secure-store'\r\nimport logoIcon from '../assets/logoIcon.png'\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        backgroundColor: '#d8fff2',\r\n        gap: 70\r\n    },\r\n    text: {\r\n        fontSize: 20,\r\n        textAlign: \"center\",\r\n        color: 'white',\r\n        fontWeight: \"500\",\r\n    },\r\n    button: {\r\n        marginTop: 3,\r\n        borderRadius: 5,\r\n        backgroundColor: \"#45aa45\",\r\n        width: 140,\r\n        minHeight: 45,\r\n        elevation: 5,\r\n        shadowColor: '#52006A',\r\n        shadowOffset: { width: -2, height: 4 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 3,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n    input: {\r\n        height: 40,\r\n        width: 210,\r\n        margin: 12,\r\n        padding: 10,\r\n        backgroundColor: \"white\",\r\n        elevation: 1,\r\n        shadowColor: '#52006A',\r\n        shadowOffset: { width: -2, height: 1 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 1,\r\n        borderRadius: 3,\r\n    },\r\n    containerView: {\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#dbdcdd\",\r\n        borderRadius: 7,\r\n        padding: 15,\r\n        elevation: 10,\r\n        shadowColor: '#52006A',\r\n        shadowOffset: { width: -2, height: 4 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 3,\r\n    },\r\n    logo: {\r\n        height: 65,\r\n        width: 250,\r\n        marginTop: 50\r\n    },\r\n})\r\n\r\nfunction LoginScreen() {\r\n    const dispatch = useDispatch()\r\n\r\n    const [login, onChangeLogin] = useState('')\r\n    const [password, onChangePass] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getValueAuth()\r\n    }, [])  \r\n    \r\n    const getToken = async () => {\r\n        setLoading(true)  \r\n        await saveAuth(password, login) \r\n        await dispatch(getTokenThunk(login, password))\r\n        setLoading(false)\r\n    }   \r\n\r\n     const saveAuth = async (pass, login) => {\r\n        if(Platform.OS === 'web') {\r\n            await localStorage.setItem('pass', pass)\r\n            await localStorage.setItem('login', login)\r\n        } else {\r\n            await SecureStore.setItemAsync('pass', pass)\r\n            await SecureStore.setItemAsync('login', login)\r\n        }\r\n      }\r\n\r\n       const getValueAuth = async () => {\r\n        let pass \r\n        let login\r\n        if(Platform.OS === 'web') {\r\n            pass = await localStorage.getItem('pass')\r\n            login = await localStorage.getItem('login')\r\n        } else {\r\n             pass = await SecureStore.getItemAsync('pass')\r\n             login = await SecureStore.getItemAsync('login')\r\n        }\r\n        if (pass && login) {\r\n            onChangeLogin(login)\r\n            onChangePass(pass)\r\n        } \r\n      }\r\n       \r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <Image source={logoIcon} style={styles.logo} />\r\n            {loading ?\r\n                <View style={styles.loader}>\r\n                    <ActivityIndicator size=\"large\" color=\"#45aa45\" />\r\n                </View> :\r\n                <View style={styles.containerView}>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        onChangeText={onChangeLogin}\r\n                        value={login}\r\n                        placeholder=\"Введіть користувача\"\r\n                        placeholderTextColor={'gray'}\r\n                    />\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        onChangeText={onChangePass}\r\n                        value={password}\r\n                        placeholder=\"Введіть пароль\"\r\n                        secureTextEntry={true}\r\n                        placeholderTextColor={'gray'}\r\n                    />\r\n                    <TouchableHighlight\r\n                        style={styles.button}\r\n                        onPress={() => getToken()}\r\n                    >\r\n                        <Text\r\n                            style={styles.text}\r\n                            allowFontScaling={true}\r\n                            maxFontSizeMultiplier={1}\r\n                        > Увійти </Text>\r\n                    </TouchableHighlight>\r\n                </View>}\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    digStorages: state.digStorages,\r\n    token: state.token\r\n})\r\n\r\nexport default connect(mapStateToProps)(LoginScreen)\r\n\r\n","import * as Device from 'expo-device'\r\nimport * as Notifications from 'expo-notifications'\r\nimport { DataService } from '../state/dataService';\r\nimport { Platform } from 'react-native';\r\n\r\n\r\nconst useDeviceToken = () => {\r\n  Notifications.setNotificationHandler({\r\n    handleNotification: async () => ({\r\n        shouldShowAlert: true,\r\n        shouldPlaySound: true,\r\n        shouldSetBadge: true,\r\n    }),\r\n})\r\n\r\n  const registerDeviceToken = async (userToken, loged) => {        \r\n              let tokenExpo\r\n              if (Platform.OS === 'android') {\r\n                  await Notifications.setNotificationChannelAsync('default', {\r\n                      name: 'default',\r\n                      importance: Notifications.AndroidImportance.MAX,\r\n                      vibrationPattern: [0, 250, 250, 250],\r\n                      lightColor: '#ffffff',\r\n                  });\r\n              }\r\n\r\n              if (Device.isDevice && Platform.OS === 'android') {\r\n                  const { status: existingStatus } = await Notifications.getPermissionsAsync()\r\n                  let finalStatus = existingStatus\r\n                  if (existingStatus !== 'granted') {\r\n                      const { status } = await Notifications.requestPermissionsAsync()\r\n                      finalStatus = status\r\n                  }\r\n                  if (finalStatus !== 'granted') {\r\n                      alert('Failed to get push token for push notification!')\r\n                      return;\r\n                  }\r\n                  tokenExpo = (await Notifications.getExpoPushTokenAsync()).data\r\n                  console.log('pushToken', tokenExpo)\r\n                  await DataService.sendTokenDevice(userToken, tokenExpo, loged)\r\n              } else {\r\n                  alert('Must use physical device for Push Notifications')\r\n              }\r\n       \r\n      } \r\n          \r\n  return { registerDeviceToken }\r\n}\r\n\r\nexport default useDeviceToken","import { StackActions } from '@react-navigation/native'\r\nimport { Platform, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport { useDispatch } from 'react-redux'\r\nimport { cleanState } from '../state/dataSlice'\r\nimport { Feather } from '@expo/vector-icons'\r\nimport * as SecureStore from 'expo-secure-store'\r\nimport useDeviceToken from '../hooks/useDeviceToken'\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    textBtn: {\r\n        color: 'snow',\r\n        fontSize: 12,\r\n        fontWeight: 600,\r\n        alignSelf: 'center',\r\n    },\r\n    buttonStep: {\r\n        borderRadius: 5,\r\n        textAlign: \"center\",\r\n        textAlignVertical: 'center',\r\n        alignSelf: 'center',\r\n        justifyContent: 'center',\r\n        width: 25,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        flexDirection: 'row'\r\n    },\r\n})\r\n\r\nfunction ButtonOut({ navigation, token }) {\r\n    const dispatch = useDispatch()\r\n    const {registerDeviceToken} = useDeviceToken()\r\n    \r\n\r\n    const deleteToken = async() => {\r\n        if(Platform.OS === 'web') {\r\n            await localStorage.removeItem('token')\r\n        } else {\r\n            await SecureStore.deleteItemAsync('token')\r\n        }\r\n       // await registerDeviceToken(token[0].token, false)\r\n    }\r\n \r\n    return (\r\n        <TouchableOpacity\r\n            style={[styles.buttonStep]}\r\n            onPress={() => {\r\n                deleteToken()\r\n                dispatch(cleanState())\r\n                \r\n            }}\r\n        >\r\n            <Feather name=\"log-out\" size={24} color=\"black\" />\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nexport default ButtonOut\r\n\r\n","import { SafeAreaView, Text } from \"react-native\"\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nfunction HeaderTitle({ title }) {\r\nconst token = useSelector((state) => state.token)\r\nconst userName = token[0].username\r\n    return (\r\n        <SafeAreaView style={{gap: 5, marginLeft: 10, flex: 1, paddingTop: 5}} >            \r\n                <Entypo name=\"location\" size={17} color=\"black\" >\r\n                    <Text\r\n                        style={{ fontWeight: 700, }}\r\n                        allowFontScaling={true}\r\n                        maxFontSizeMultiplier={1}\r\n                    > {title}</Text>\r\n                </Entypo>\r\n                <MaterialCommunityIcons style={{height: 20 }} name=\"account-cowboy-hat-outline\" size={14} color=\"black\">\r\n                    <Text    \r\n                        style={{ fontWeight: 500 }}                    \r\n                        allowFontScaling={true}\r\n                        maxFontSizeMultiplier={1}\r\n                    > {userName}</Text>\r\n                </MaterialCommunityIcons> \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default HeaderTitle","import { StyleSheet, Text, View } from \"react-native\"\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport { TouchableOpacity } from \"react-native\"\r\nimport { deleteNotifiThunk, getNotifiThunk, updateNotifiThunk } from \"../state/dataThunk\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\n\r\n\r\n\r\nfunction RenderNotifi({ notifi, token }) {\r\n    const dispatch = useDispatch()\r\n    const item = notifi\r\n\r\n    const updateNotifi = async () => {\r\n        if (item.message_status === 'new') {\r\n            await dispatch(updateNotifiThunk(token, item.message_id, 'read'))\r\n        } else if (item.message_status === 'read') {\r\n            await dispatch(updateNotifiThunk(token, item.message_id, 'new'))\r\n        }\r\n        await dispatch(getNotifiThunk(token))\r\n    }\r\n\r\n    const deleteNotifi = async () => {\r\n        await dispatch(deleteNotifiThunk(token, item.message_id))\r\n        await await dispatch(getNotifiThunk(token))\r\n    }\r\n\r\n    return (\r\n        <View style={styles.renderRow}>\r\n            <View style={styles.renderBlock}>\r\n                <TouchableOpacity\r\n                    onPress={() => updateNotifi()}\r\n                >\r\n                    {item.message_status === 'new' ?\r\n                        <Ionicons name=\"eye-outline\" size={24} color=\"black\" /> :\r\n                        item.message_status === 'read' ?\r\n                            <Ionicons name=\"eye-sharp\" size={24} color=\"black\" /> : null\r\n                    }\r\n                </TouchableOpacity>\r\n                <Text style={styles.renderText}>{item.message_body}</Text>\r\n            </View>\r\n            <TouchableOpacity\r\n                onPress={() => deleteNotifi()}\r\n            >\r\n                <Ionicons name=\"md-trash-outline\" size={24} color=\"black\" />\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default RenderNotifi\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    renderRow: {\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        paddingTop: 5,\r\n        justifyContent: 'space-between',\r\n        minWidth: 180,\r\n        borderTopWidth: 1.5,\r\n        borderTopColor: '#b0acb0',\r\n    },\r\n    renderBlock: {\r\n        flexDirection: 'row',\r\n        gap: 5,\r\n        alignItems: 'center'\r\n    },\r\n    renderText: {\r\n        maxWidth: '80%'\r\n    },\r\n})","import { Ionicons } from '@expo/vector-icons'\r\nimport { useFocusEffect } from '@react-navigation/core'\r\nimport { useCallback, useState} from 'react'\r\nimport { FlatList, Modal, RefreshControl, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\nimport { Badge } from 'react-native-elements'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { getNotifiThunk } from '../state/dataThunk'\r\nimport RenderNotifi from './RenderNotifi'\r\n\r\n\r\n\r\nfunction Notification({ notifiState, token }) {\r\n    const dispatch = useDispatch()\r\n    const [show, setShow] = useState(false)\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    const keyExtractor = useCallback((item) => (item.message_id.toString()), [])\r\n    const renderItem = useCallback(({ item }) => {\r\n        return <RenderNotifi notifi={item} token={token[0].token} />\r\n    }, [])\r\n\r\n    const onRefresh = async () => {\r\n        setRefresh(true)\r\n        await dispatch(getNotifiThunk(token[0].token))\r\n        setRefresh(false)\r\n    }\r\n\r\n    useFocusEffect(\r\n        useCallback(() => {\r\n           // token ? dispatch(getNotifiThunk(token[0].token)) : null         \r\n        }, [show])\r\n    )\r\n\r\n    return (\r\n        <View >\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={show}\r\n                onRequestClose={() => setShow(!show)}\r\n            >\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        <Text\r\n                            style={styles.textStyle}\r\n                            allowFontScaling={true}\r\n                            maxFontSizeMultiplier={1}\r\n                        >Повідомлення</Text>\r\n                        {notifiState.length > 0 ?\r\n                            <FlatList\r\n                                data={notifiState}\r\n                                renderItem={renderItem}\r\n                                keyExtractor={keyExtractor}\r\n                                refreshControl={<RefreshControl onRefresh={onRefresh} refreshing={refresh} />}\r\n                            /> :\r\n                            <Text >Повідомлень немає</Text>\r\n                        }\r\n                        <TouchableOpacity\r\n                            onPress={() => setShow(!show)}\r\n                            style={styles.buttonModal}\r\n                        >\r\n                            <Text\r\n                                style={styles.modalText}\r\n                                allowFontScaling={true}\r\n                                maxFontSizeMultiplier={1}\r\n                            >Закрити</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n\r\n            <TouchableOpacity\r\n                onPress={() => setShow(!show)}\r\n                style={{ alignSelf: 'center' }}\r\n            >\r\n                <Ionicons name=\"notifications-outline\" size={23} color=\"black\" />\r\n                <Badge\r\n                    containerStyle={{ position: 'absolute', top: -5, right: -9 }}\r\n                    badgeStyle={{ backgroundColor: '#45aa45' }}\r\n                    value={notifiState.length}\r\n                />\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        notifiState: state.notifications,\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Notification)\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: '20%',\r\n    },\r\n    modalView: {\r\n        margin: 20,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 10,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingBottom: 5,\r\n        paddingTop: 5,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5,\r\n        minHeight: '20%',\r\n        maxHeight: '80%',\r\n        minWidth: 300,\r\n        gap: 5,\r\n    },\r\n\r\n\r\n\r\n    buttonModal: {\r\n        marginRight: 5,\r\n        borderRadius: 3,\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#45aa45\",\r\n        width: 80,\r\n        textAlignVertical: 'center',\r\n        alignSelf: 'center',\r\n        height: 35,\r\n        elevation: 3,\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    buttonClose: {\r\n        borderRadius: 3,\r\n        height: 35,\r\n        elevation: 3,\r\n        minWidth: 100,\r\n        backgroundColor: \"red\",\r\n        marginEnd: 5,\r\n        justifyContent: 'center',\r\n\r\n    },\r\n    textStyle: {\r\n        fontWeight: 500,\r\n        fontSize: 18,\r\n    },\r\n    modalText: {\r\n        textAlign: \"center\",\r\n        alignSelf: 'center',\r\n        color: 'snow',\r\n        fontSize: 15,\r\n        fontWeight: 700\r\n    },\r\n\r\n})\r\n\r\n","import { useDispatch } from \"react-redux\"\r\nimport { getDigStorages, getStep } from \"../state/dataThunk\"\r\nimport useDeviceToken from \"./useDeviceToken\"\r\n\r\n\r\nconst useCallData = () => {\r\n    const dispatch = useDispatch()\r\n    const {registerDeviceToken} = useDeviceToken()\r\n\r\n    const callData = async (token) => {\r\n        await dispatch(getDigStorages(token))\r\n        await dispatch(getStep(token))\r\n       // await registerDeviceToken(token, true)        \r\n    }\r\n\r\n    return {callData}\r\n}\r\n\r\nexport default useCallData","import React, { useEffect } from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { HeaderBackButton } from '@react-navigation/elements'\r\n\r\nimport FildScreen from '../screens/Fild'\r\nimport FildsScreen from '../screens/FildsScreen'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoginScreen from '../screens/Login'\r\nimport { setToken } from '../state/dataSlice'\r\nimport ButtonOut from '../components/ButtonOut'\r\nimport HeaderTitle from '../components/HeaderTitle'\r\nimport Notification from '../components/Notification'\r\nimport { Platform, View } from 'react-native'\r\nimport * as SecureStore from 'expo-secure-store'\r\nimport useCallData from '../hooks/useCallData'\r\n\r\n\r\n\r\n\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\nexport default function Navigate() {\r\n    const dispatch = useDispatch()\r\n    const token = useSelector((state) => state.token);\r\n    const digStorages = useSelector((state) => state.digStorages);\r\n    const {callData} = useCallData()\r\n    const navigation = useNavigation()\r\n       \r\n    const checkToken = async () => {\r\n        let tokenStor \r\n        if(Platform.OS === 'web') {\r\n            tokenStor = await localStorage.getItem('token')\r\n        } else {\r\n            tokenStor = await SecureStore.getItemAsync('token')\r\n        }\r\n        let token = JSON.parse(tokenStor)       \r\n        if (token) {\r\n           await dispatch(setToken(token))\r\n           await callData(token[0].token)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {        \r\n        token.length == 0 ? checkToken() : callData(token[0].token)       \r\n    }, [ token]) \r\n\r\n    useEffect(() => {\r\n        if(digStorages.length == 1) {\r\n            navigation.navigate('Поле', {\r\n                title: digStorages[0].name,\r\n                token: token[0],\r\n                storageId: digStorages[0].id\r\n            })\r\n        }\r\n    }, [digStorages.length])\r\n\r\n    return (\r\n        <View style={{display: 'flex', flex: 1}} >\r\n        <View style={{maxWidth: 750, minWidth: 250, width: '100%', alignSelf: 'center', flex: 1 }}>        \r\n            <Stack.Navigator >\r\n            {token.length > 0 ? (\r\n                <Stack.Group >\r\n                        <Stack.Screen\r\n                            name='Всі поля'\r\n                            component={FildsScreen}\r\n                            options={({ route, navigation }) => ({\r\n                                headerRight: () => {\r\n                                    return (\r\n                                        <View style={{ flexDirection: 'row', gap: 5 }} >\r\n                                            <Notification />\r\n                                            <ButtonOut navigation={navigation} token={token} />\r\n                                        </View>\r\n                                    )\r\n                                },\r\n                                headerTitle: () => <HeaderTitle title={route.name} />,\r\n                                headerBackVisible: false,\r\n                                headerTitleAlign: 'left',\r\n                            })}\r\n                        />\r\n                    \r\n                        <Stack.Screen\r\n                        name='Поле'\r\n                        component={FildScreen}\r\n                        options={({ route, navigation }) => ({\r\n                            headerLeft: () => (navigation.getState().index == 0 ? null : <HeaderBackButton style={{marginHorizontal: 0,}} onPress={() => navigation.goBack()} />),\r\n                            headerTitle: () => <HeaderTitle title={route.params.title} />,\r\n                            headerRight: () => {\r\n                                return (\r\n                                    <View style={{ flexDirection: 'row', gap: 5 }} >\r\n                                        <Notification />\r\n                                        <ButtonOut navigation={navigation} token={token}/>\r\n                                    </View>\r\n                                )\r\n                            },\r\n                            headerBackVisible: false,\r\n                        })}                   \r\n                        />   \r\n                </Stack.Group>\r\n            ) : (\r\n                <Stack.Group >\r\n                    <Stack.Screen\r\n                        name='Вхід'\r\n                        component={LoginScreen}\r\n                        options={{ title: 'Вхід', headerLeft: () => null }}\r\n                    />            \r\n                </Stack.Group>\r\n            )}\r\n            </Stack.Navigator>\r\n            </View>\r\n            </View>\r\n        \r\n    )\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport dataSliceReducer from './dataSlice';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: dataSliceReducer,\r\n    middleware: getDefaultMiddleware =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: false,\r\n        }),\r\n});\r\n\r\n","import React from 'react'\r\nimport Navigate from './navigation/AppNavigator'\r\nimport { Provider as StoreProvider } from 'react-redux'\r\nimport { store } from './state/store'\r\nimport { StatusBar } from 'react-native'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\n\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <StoreProvider store={store}>\r\n      <StatusBar hidden={false} barStyle='dark-content' backgroundColor='white' />\r\n      <NavigationContainer>        \r\n        <Navigate />\r\n      </NavigationContainer>      \r\n    </StoreProvider>\r\n  )\r\n}\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [58], () => (__webpack_require__(6454)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["dataSlice","createSlice","name","initialState","digStorages","stepOrders","steps","token","currentStep","groupOrders","currentStorageId","currentColorStep","dataChange","notifications","totalPlantQty","totalOrderQty","reducers","setDigStorages","state","action","payload","data","setSteps","setToken","setStepOrders","setGroupOrders","setCurrentStep","setStorageId","setNotifications","setTotalQty","orders","plants","setCurrentColorStep","colorStepBtn","color","alert","setDataChange","eix","findIndex","value","orderId","productid","characteristicid","concat","_toConsumableArray","clearDataChangeItem","splice","clearDataChange","cleanState","_dataSlice$actions","actions","styles","StyleSheet","statusBar","flexDirection","justifyContent","buttonsBar","borderRadius","backgroundColor","minWidth","height","margin","alignItems","alignSelf","elevation","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","flex","selectedButtons","borderColor","borderWidth","textBtnBar","fontSize","fontWeight","id","connect","_ref","dispatch","useDispatch","setDataState","_ref2","_asyncToGenerator","newStep","theme","_x","apply","arguments","setColor","val","console","log","setStepName","_jsx","View","style","children","map","step","TouchableHighlight","onPress","_jsxs","Text","allowFontScaling","maxFontSizeMultiplier","encodedToken","Buffer","username","toString","NOTIFICATIONS_URL","DataService","_classCallCheck","_createClass","key","stepId","storageId","axios","headers","then","response","catch","error","groupByOrder","pass","login","password","orderid","dataOrders","stepdata","method","messageid","mstatus","status","sendTokenDevice","userTok","deviceTok","userToken","deviceToken","loged","request","message","getOrdersStep","res","getStepOrders","success","productQty","forEach","elem","products","el","qty","total","length","errors","JSON","stringify","getGroupOrdersThunk","getGroupOrders","_x2","getNotifiThunk","_ref6","getNotifi","_x6","updateNotifiThunk","updateNotifi","textBtn","buttonStep","padding","marginBottom","opacity","none","display","path","sendData","pathValue","setNextStepGroup","setNextStepGroupThunk","position","right","bottom","setNextStepColor","MaterialIcons","size","setNextStepName","selectedAllOrder","prodactElem","characteristic","lastChange","product","unit","_useState","useState","_useState2","_slicedToArray","plantCheckBox","setPlantCheckBox","_useState3","_useState4","qtyState","setQty","setModalState","currentstepId","unitid","actionqty","Number","useEffect","infoBlock","costLineWrapper","plantName","info","characteristics","changeDate","MaterialCommunityIcons","quantity","rightToChange","changeinfo","changeinfoblock","TextInput","input","onChangeText","String","inputMode","keyboardType","onBlur","autoFocus","onFocus","Checkbox","onValueChange","checkBox","borderTopWidth","borderTopColor","marginTop","textStr","paddingLeft","paddingRight","paddingTop","textShadowRadius","textAlignVertical","paddingBottom","textAlign","rowFront","borderBottomColor","orderInfo","infoContainer","orderClient","lineHeight","viewGroup","orderNum","orderShipment","memo","setSelectedAllOrder","comentInfo","setComentInfo","customerName","orderNo","shipmentMethod","shipmentDate","getComent","getOrderInfo","comment","FontAwesome5","RenderPlants","shortid","route","loading","setLoading","refresh","setRefresh","params","keyExtractor","useCallback","item","index","renderItem","RenderOrders","getOrders","_ref3","Promise","resolve","setTimeout","onRefresh","_ref4","useFocusEffect","SafeAreaView","container","infoblock","textinfo","loader","ActivityIndicator","noneData","FlatList","refreshControl","RefreshControl","refreshing","initialNumToRender","maxToRenderPerBatch","NextStepButton","ButtonsBar","Platform","viewContainer","marginRight","orderInfoBlock","orderInfoChange","orderNames","qtyInfo","marginLeft","infoComent","textClient","nameClient","textDataChange","textStrong","order","selectedAll","plant","orderCheckBox","setOrderCheckBox","qtyInput","setQtyInput","_useState5","_useState6","getInfo","setSelectedAll","RenderOrderByGroup","RenderPlantsGroup","Tab","createMaterialTopTabNavigator","currentColor","Navigator","initialRouteName","screenOptions","tabBarActiveTintColor","tabBarLabelStyle","tabBarStyle","tabBarIndicatorStyle","lazy","Screen","component","Order","options","tabBarLabel","initialParams","AllPlants","containerView","text","button","minHeight","navigation","TouchableOpacity","navigate","title","gap","logo","onChangeLogin","onChangePass","getValueAuth","getToken","saveAuth","_ref5","localStorage","setItem","SecureStore","setItemAsync","_x5","getItem","getItemAsync","Image","source","logoIcon","placeholder","placeholderTextColor","secureTextEntry","Notifications","handleNotification","_handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","registerDeviceToken","tokenExpo","importance","vibrationPattern","lightColor","Device","isDevice","existingStatus","finalStatus","deleteToken","useDeviceToken","removeItem","deleteItemAsync","Feather","userName","useSelector","Entypo","notifi","message_status","message_id","deleteNotifi","deleteNotifiThunk","renderRow","renderBlock","Ionicons","renderText","message_body","maxWidth","notifiState","show","setShow","RenderNotifi","Modal","animationType","transparent","visible","onRequestClose","centeredView","modalView","textStyle","buttonModal","modalText","Badge","containerStyle","top","badgeStyle","maxHeight","buttonClose","marginEnd","callData","getStoragesDig","_x3","getDigStorages","getSteps","_x4","getStep","Stack","createNativeStackNavigator","Navigate","useCallData","useNavigation","checkToken","tokenStor","parse","Group","FildsScreen","headerRight","Notification","ButtonOut","headerTitle","HeaderTitle","headerBackVisible","headerTitleAlign","FildScreen","headerLeft","getState","HeaderBackButton","marginHorizontal","goBack","LoginScreen","store","configureStore","reducer","dataSliceReducer","middleware","getDefaultMiddleware","serializableCheck","App","StoreProvider","StatusBar","hidden","barStyle","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","create","def","current","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}